# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ipCount.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ipCount.proto',
  package='ipmapapi',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\ripCount.proto\x12\x08ipmapapi\"/\n\x08IPCounts\x12#\n\x08ipCounts\x18\x01 \x03(\x0b\x32\x11.ipmapapi.IPCount\"=\n\x07IPCount\x12\x10\n\x08latitude\x18\x01 \x01(\x02\x12\x11\n\tlongitude\x18\x02 \x01(\x02\x12\r\n\x05\x63ount\x18\x03 \x01(\x05\x62\x06proto3'
)




_IPCOUNTS = _descriptor.Descriptor(
  name='IPCounts',
  full_name='ipmapapi.IPCounts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ipCounts', full_name='ipmapapi.IPCounts.ipCounts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=74,
)


_IPCOUNT = _descriptor.Descriptor(
  name='IPCount',
  full_name='ipmapapi.IPCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='latitude', full_name='ipmapapi.IPCount.latitude', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='ipmapapi.IPCount.longitude', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='count', full_name='ipmapapi.IPCount.count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=137,
)

_IPCOUNTS.fields_by_name['ipCounts'].message_type = _IPCOUNT
DESCRIPTOR.message_types_by_name['IPCounts'] = _IPCOUNTS
DESCRIPTOR.message_types_by_name['IPCount'] = _IPCOUNT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IPCounts = _reflection.GeneratedProtocolMessageType('IPCounts', (_message.Message,), {
  'DESCRIPTOR' : _IPCOUNTS,
  '__module__' : 'ipCount_pb2'
  # @@protoc_insertion_point(class_scope:ipmapapi.IPCounts)
  })
_sym_db.RegisterMessage(IPCounts)

IPCount = _reflection.GeneratedProtocolMessageType('IPCount', (_message.Message,), {
  'DESCRIPTOR' : _IPCOUNT,
  '__module__' : 'ipCount_pb2'
  # @@protoc_insertion_point(class_scope:ipmapapi.IPCount)
  })
_sym_db.RegisterMessage(IPCount)


# @@protoc_insertion_point(module_scope)
